fails:Kernel.printf calls write on the first argument when it is not a string
fails:Kernel.printf formatting io is specified integer formats converts argument into Integer with to_int
fails:Kernel.printf formatting io is specified integer formats converts argument into Integer with to_i if to_int isn't available
fails:Kernel.printf formatting io is specified integer formats converts String argument with Kernel#Integer
fails:Kernel.printf formatting io is specified integer formats b converts argument as a binary number
fails:Kernel.printf formatting io is specified integer formats b displays negative number as a two's complement prefixed with '..1'
fails:Kernel.printf formatting io is specified integer formats b collapse negative number representation if it equals 1
fails:Kernel.printf formatting io is specified integer formats B converts argument as a binary number
fails:Kernel.printf formatting io is specified integer formats B displays negative number as a two's complement prefixed with '..1'
fails:Kernel.printf formatting io is specified integer formats B collapse negative number representation if it equals 1
fails:Kernel.printf formatting io is specified integer formats d converts argument as a decimal number
fails:Kernel.printf formatting io is specified integer formats d works well with large numbers
fails:Kernel.printf formatting io is specified integer formats i converts argument as a decimal number
fails:Kernel.printf formatting io is specified integer formats i works well with large numbers
fails:Kernel.printf formatting io is specified integer formats u converts argument as a decimal number
fails:Kernel.printf formatting io is specified integer formats u works well with large numbers
fails:Kernel.printf formatting io is specified integer formats o converts argument as an octal number
fails:Kernel.printf formatting io is specified integer formats o displays negative number as a two's complement prefixed with '..7'
fails:Kernel.printf formatting io is specified integer formats o collapse negative number representation if it equals 7
fails:Kernel.printf formatting io is specified integer formats x converts argument as a hexadecimal number
fails:Kernel.printf formatting io is specified integer formats x displays negative number as a two's complement prefixed with '..f'
fails:Kernel.printf formatting io is specified integer formats x collapse negative number representation if it equals f
fails:Kernel.printf formatting io is specified integer formats X converts argument as a hexadecimal number with uppercase letters
fails:Kernel.printf formatting io is specified integer formats X displays negative number as a two's complement prefixed with '..f'
fails:Kernel.printf formatting io is specified integer formats X collapse negative number representation if it equals F
fails:Kernel.printf formatting io is specified float formats converts argument into Float
fails:Kernel.printf formatting io is specified float formats e converts argument into exponential notation [-]d.dddddde[+-]dd
fails:Kernel.printf formatting io is specified float formats e cuts excessive digits and keeps only 6 ones
fails:Kernel.printf formatting io is specified float formats e rounds the last significant digit to the closest one
fails:Kernel.printf formatting io is specified float formats e displays Float::INFINITY as Inf
fails:Kernel.printf formatting io is specified float formats e displays Float::NAN as NaN
fails:Kernel.printf formatting io is specified float formats E converts argument into exponential notation [-]d.dddddde[+-]dd
fails:Kernel.printf formatting io is specified float formats E cuts excessive digits and keeps only 6 ones
fails:Kernel.printf formatting io is specified float formats E rounds the last significant digit to the closest one
fails:Kernel.printf formatting io is specified float formats E displays Float::INFINITY as Inf
fails:Kernel.printf formatting io is specified float formats E displays Float::NAN as NaN
fails:Kernel.printf formatting io is specified float formats f converts floating point argument as [-]ddd.dddddd
fails:Kernel.printf formatting io is specified float formats f cuts excessive digits and keeps only 6 ones
fails:Kernel.printf formatting io is specified float formats f rounds the last significant digit to the closest one
fails:Kernel.printf formatting io is specified float formats f displays Float::INFINITY as Inf
fails:Kernel.printf formatting io is specified float formats f displays Float::NAN as NaN
fails:Kernel.printf formatting io is specified float formats g displays Float::INFINITY as Inf
fails:Kernel.printf formatting io is specified float formats g displays Float::NAN as NaN
fails:Kernel.printf formatting io is specified float formats g the exponent is less than -4 converts a floating point number using exponential form
fails:Kernel.printf formatting io is specified float formats g the exponent is greater than or equal to the precision (6 by default) converts a floating point number using exponential form
fails:Kernel.printf formatting io is specified float formats g otherwise converts a floating point number in dd.dddd form
fails:Kernel.printf formatting io is specified float formats g otherwise cuts excessive digits in fractional part and keeps only 4 ones
fails:Kernel.printf formatting io is specified float formats g otherwise rounds the last significant digit to the closest one in fractional part
fails:Kernel.printf formatting io is specified float formats g otherwise cuts fraction part to have only 6 digits at all
fails:Kernel.printf formatting io is specified float formats G displays Float::INFINITY as Inf
fails:Kernel.printf formatting io is specified float formats G displays Float::NAN as NaN
fails:Kernel.printf formatting io is specified float formats G the exponent is less than -4 converts a floating point number using exponential form
fails:Kernel.printf formatting io is specified float formats G the exponent is greater than or equal to the precision (6 by default) converts a floating point number using exponential form
fails:Kernel.printf formatting io is specified float formats G otherwise converts a floating point number in dd.dddd form
fails:Kernel.printf formatting io is specified float formats G otherwise cuts excessive digits in fractional part and keeps only 4 ones
fails:Kernel.printf formatting io is specified float formats G otherwise rounds the last significant digit to the closest one in fractional part
fails:Kernel.printf formatting io is specified float formats G otherwise cuts fraction part to have only 6 digits at all
fails:Kernel.printf formatting io is specified float formats a converts floating point argument as [-]0xh.hhhhp[+-]dd
fails:Kernel.printf formatting io is specified float formats a displays Float::INFINITY as Inf
fails:Kernel.printf formatting io is specified float formats a displays Float::NAN as NaN
fails:Kernel.printf formatting io is specified float formats A converts floating point argument as [-]0xh.hhhhp[+-]dd and use uppercase X and P
fails:Kernel.printf formatting io is specified float formats A displays Float::INFINITY as Inf
fails:Kernel.printf formatting io is specified float formats A displays Float::NAN as NaN
fails:Kernel.printf formatting io is specified other formats c displays character if argument is a numeric code of character
fails:Kernel.printf formatting io is specified other formats c displays character if argument is a single character string
fails:Kernel.printf formatting io is specified other formats c raises ArgumentError if argument is a string of several characters
fails:Kernel.printf formatting io is specified other formats c raises ArgumentError if argument is an empty string
fails:Kernel.printf formatting io is specified other formats c supports Unicode characters
fails:Kernel.printf formatting io is specified other formats p displays argument.inspect value
fails:Kernel.printf formatting io is specified other formats s substitute argument passes as a string
fails:Kernel.printf formatting io is specified other formats s converts argument to string with to_s
fails:Kernel.printf formatting io is specified other formats s does not try to convert with to_str
fails:Kernel.printf formatting io is specified other formats % alone displays the percent sign
fails:Kernel.printf formatting io is specified other formats % is escaped by %
fails:Kernel.printf formatting io is specified flags space applies to numeric formats bBdiouxXeEfgGaA leaves a space at the start of non-negative numbers
fails:Kernel.printf formatting io is specified flags space applies to numeric formats bBdiouxXeEfgGaA does not leave a space at the start of negative numbers
fails:Kernel.printf formatting io is specified flags space applies to numeric formats bBdiouxXeEfgGaA prevents converting negative argument to two's complement form
fails:Kernel.printf formatting io is specified flags space applies to numeric formats bBdiouxXeEfgGaA treats several white spaces as one
fails:Kernel.printf formatting io is specified flags (digit)$ specifies the absolute argument number for this field
fails:Kernel.printf formatting io is specified flags (digit)$ raises exception if argument number is bigger than actual arguments list
fails:Kernel.printf formatting io is specified flags (digit)$ ignores '-' sign
fails:Kernel.printf formatting io is specified flags (digit)$ raises ArgumentError exception when absolute and relative argument numbers are mixed
fails:Kernel.printf formatting io is specified flags # applies to format o increases the precision until the first digit will be `0' if it is not formatted as complements
fails:Kernel.printf formatting io is specified flags # applies to format o does nothing for negative argument
fails:Kernel.printf formatting io is specified flags # applies to formats bBxX prefixes the result with 0x, 0X, 0b and 0B respectively for non-zero argument
fails:Kernel.printf formatting io is specified flags # applies to formats bBxX does nothing for zero argument
fails:Kernel.printf formatting io is specified flags # applies to formats aAeEfgG forces a decimal point to be added, even if no digits follow
fails:Kernel.printf formatting io is specified flags # applies to formats aAeEfgG changes format from dd.dddd to exponential form for gG
fails:Kernel.printf formatting io is specified flags # applies to gG does not remove trailing zeros
fails:Kernel.printf formatting io is specified flags + applies to numeric formats bBdiouxXaAeEfgG adds a leading plus sign to non-negative numbers
fails:Kernel.printf formatting io is specified flags + applies to numeric formats bBdiouxXaAeEfgG does not use two's complement form for negative numbers for formats bBoxX
fails:Kernel.printf formatting io is specified flags - left-justifies the result of conversion if width is specified
fails:Kernel.printf formatting io is specified flags 0 (zero) applies to numeric formats bBdiouxXaAeEfgG and width is specified pads with zeros, not spaces
fails:Kernel.printf formatting io is specified flags 0 (zero) applies to numeric formats bBdiouxXaAeEfgG and width is specified uses radix-1 when displays negative argument as a two's complement
fails:Kernel.printf formatting io is specified flags * uses the previous argument as the field width
fails:Kernel.printf formatting io is specified flags * left-justifies the result if width is negative
fails:Kernel.printf formatting io is specified flags * uses the specified argument as the width if * is followed by a number and $
fails:Kernel.printf formatting io is specified flags * left-justifies the result if specified with $ argument is negative
fails:Kernel.printf formatting io is specified flags * raises ArgumentError when is mixed with width
fails:Kernel.printf formatting io is specified width specifies the minimum number of characters that will be written to the result
fails:Kernel.printf formatting io is specified width is ignored if argument's actual length is greater
fails:Kernel.printf formatting io is specified precision integer types controls the number of decimal places displayed
fails:Kernel.printf formatting io is specified precision float types controls the number of decimal places displayed in fraction part
fails:Kernel.printf formatting io is specified precision float types does not affect G format
fails:Kernel.printf formatting io is specified precision string formats determines the maximum number of characters to be copied from the string
fails:Kernel.printf formatting io is specified reference by name %<name>s style uses value passed in a hash argument
fails:Kernel.printf formatting io is specified reference by name %<name>s style supports flags, width, precision and type
fails:Kernel.printf formatting io is specified reference by name %<name>s style allows to place name in any position
fails:Kernel.printf formatting io is specified reference by name %<name>s style cannot be mixed with unnamed style
fails:Kernel.printf formatting io is specified reference by name %{name} style uses value passed in a hash argument
fails:Kernel.printf formatting io is specified reference by name %{name} style does not support type style
fails:Kernel.printf formatting io is specified reference by name %{name} style supports flags, width and precision
fails:Kernel.printf formatting io is specified reference by name %{name} style cannot be mixed with unnamed style
fails:Kernel.printf formatting io is specified reference by name %{name} style raises KeyError when there is no matching key
fails:Kernel.printf formatting io is specified reference by name %{name} style converts value to String with to_s
fails:Kernel.printf formatting io is not specified other formats c raises ArgumentError if argument is an empty string
fails:Kernel.printf formatting io is not specified other formats c supports Unicode characters
fails:Kernel.printf formatting io is not specified other formats s does not try to convert with to_str
fails:Kernel.printf formatting io is not specified flags (digit)$ raises exception if argument number is bigger than actual arguments list
fails:Kernel.printf formatting io is not specified flags # applies to format o does nothing for negative argument
fails:Kernel.printf formatting io is not specified flags # applies to formats bBxX does nothing for zero argument
fails:Kernel.printf formatting io is not specified flags # applies to formats aAeEfgG forces a decimal point to be added, even if no digits follow
fails:Kernel.printf formatting io is not specified flags # applies to gG does not remove trailing zeros
fails:Kernel.printf formatting io is not specified flags - left-justifies the result of conversion if width is specified
fails:Kernel.printf formatting io is not specified flags 0 (zero) applies to numeric formats bBdiouxXaAeEfgG and width is specified uses radix-1 when displays negative argument as a two's complement
fails:Kernel.printf formatting io is not specified flags * left-justifies the result if width is negative
fails:Kernel.printf formatting io is not specified flags * left-justifies the result if specified with $ argument is negative
fails:Kernel.printf formatting io is not specified precision string formats determines the maximum number of characters to be copied from the string
fails:Kernel.printf formatting io is not specified reference by name %{name} style supports flags, width and precision
fails:Kernel.printf formatting io is specified other formats % alone raises an ArgumentError
fails:Kernel.printf formatting io is specified faulty key sets the Hash as the receiver of KeyError
fails:Kernel.printf formatting io is specified faulty key sets the unmatched key as the key of KeyError
fails:Kernel.printf formatting io is not specified other formats % alone raises an ArgumentError
fails:Kernel.printf formatting io is specified faulty key raises a KeyError
